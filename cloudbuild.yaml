steps:
  - id: "Build community builders image"
    name: "gcr.io/cloud-builders/git"
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      git clone https://github.com/GoogleCloudPlatform/cloud-builders-community
      cd cloud-builders-community/terraform
      gcloud builds submit --config cloudbuild.yaml .
      cd .. 

      cd firebase
      gcloud builds submit --config cloudbuild.yaml .
      cd ../..
      cd firebase
      find ./.firebaserc -type f -exec sed -i 's/<GCP_PROJECT_ID>/${PROJECT_ID}/g' {} \;
      cat ./.firebaserc

  - id: "Create bucket for terraform state"
    name: "gcr.io/cloud-builders/git"
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      chmod +x init.sh
      ./init.sh


  - id: "Enable required GCP APIs"
    name: "gcr.io/${PROJECT_ID}/terraform"
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      terraform -chdir=terraform/init init
      terraform -chdir=terraform/init pull state
      terraform -chdir=terraform/init apply -auto-approve


  - id: "Update cloud run service"
    name: "gcr.io/${PROJECT_ID}/terraform"
    entrypoint: 'bash'
    args:
    - '-c' 
    - |
      dockerSHA=`gcloud artifacts docker images list asia-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME} --limit=1 --sort-by=~CREATE_TIME | grep sha256 | cut -d ' ' -f 3`

      terraform -chdir=terraform init
      terraform -chdir=terraform import google_service_account.cloud_resume_challenge_worker projects/${PROJECT_ID}/serviceAccounts/crc-worker-id@${PROJECT_ID}.iam.gserviceaccount.com
      terraform -chdir=terraform import google_cloud_run_service.cloud-resume-challenge asia-east1/${PROJECT_ID}/${_SERVICE_NAME}
      terraform -chdir=terraform apply -auto-approve -var project=${PROJECT_ID} -var imagesha=$dockerSHA


  - id: "Setup firebase rules"
    name: "gcr.io/${PROJECT_ID}/firebase"
    entrypoint: 'bash'
    args:
    - '-c' 
    - |
      cd firebase
      firebase deploy --only firestore:rules


options:
  logStreamingOption: STREAM_ON

substitutions:
  _SERVICE_NAME: cloud-resume-challenge

images:
  - "asia-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}"